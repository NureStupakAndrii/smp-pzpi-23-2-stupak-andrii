  1 Міністерство освіти і науки України
  2 Харківський національний університет радіоелектроніки
  3 Кафедра програмної інженерії
  4
  5
  6 Лабораторна робота №3
  7 З дисципліни: «Скриптові мови програмування»
  8 на тему «Створення Web-застосунків за допомогою PHP»
  9
 10
 11 Виконав
 12 ст. гр. ПЗПІ-23-2
 13 Ступак А. Ю.
 14
 15 03 червня 2025 р.
 16 Перевірив
 17 ст. викл. катедри ПІ
 18 Сокорчук І.В.
 19
 20
 21 2025
 22
 23
 24 3 СТВОРЕННЯ WEB-ЗАТОСУНКІВ ЗА ДОПОМОГОЮ PHP
 25
 26 1 ІСТОРІЯ ЗМІН
 27
 28 №   Дата           Версія звіту     Опис змін та виправлень
 29 1   04.06.2025     0.1              Створено звіт
 30
 31
 32 2 ЗАВДАННЯ
 33
 34 Отримати базові знання з розробки сайтів за допомогою мови PHP. Реалізувати вебсайт інтернет-магазину "Весна", що складається
 35 з головної сторінки, переліку товарів та кошику. Необхідно реалізувати перегляд товарів, вибір кількості та додавання до кошику.
 36 У кошику необхідно реалізувати відображення доданих товарів та їх видалення.
 37
 38
 39 3 ОПИС ВИКОНАНОЇ РОБОТИ
 40
 41 3.1 Загальна структура
 42 Даний проєкт є прикладом вебсайту, розробленого з використанням мов програмування та технологій, таких як PHP, CSS та SQLite.
 43 Основна структура складається з PHP-файлів: index.php, що є точкою входу у вебзастосунок і містить список товарів; cart.php,
 44 який реалізує сторінку кошика та її логіку; та home.php, що відповідає за сторінку "Home" у вебзастосунку. Також у структурі присутні директорії: db, у якій зберігається файл init_db.php, який виконує створення та заповнення бази даних продуктами; директорія includes, що містить файли header.php та footer.php, які відповідають за шапку та підвал сайту; та директорія styles, у якій розміщено файл index.css, що містить основні стилі програми.
 45
 46 3.2 База даних
 47 У проєкті використовується база даних SQLite, яка зберігається у файлі products_shop.sqlite. Вона містить таблицю з товарами, які відображаються на сайті. Таблиці створюються та наповнюються автоматично при першому запуску програми.  Базу даних SQLite було обрано, тому що це легка, проста у використанні вбудована база даних, яка не потребує встановлення окремого серверу і її легко розгорнути у додатку.
 48
 49 Структура таблиці товарів складається з:
 50     - id - ідентифікатор товару, первинний ключ;
 51         - name - назва товару;
 52         - price - ціна товару;
 53
 54 3.3 Робота з сессіями
 55 У цьому проєкті реалізовано кошик для покупок за допомогою механізму сесій у PHP. Всі дані про вибрані товари зберігаються у суперглобальному масиві $_SESSION['cart'], де для кожного товару зберігається його ідентифікатор, назва, ціна та кількість. З самого початку відкривається сесія командою session_start(), що дозволяє зчитувати та зберігати дані користувача між запитами. Завдяки цьому можна реалізувати кошик, що збергіає свій стан при переході між сторінками. Якщо у кошику немає товарів, то при заході на сторінку кошику,
 56 замість товарів у кошику буде надпис, що кошик порожній. У кошику обчислюється вартість кожного товару, враховуючи кількість та ціну, та виводиться загальна ціна усіх товарів в кошику. Також, код перевіряє, чи було відправлено POST-запит із параметром remove, і видаляє відповідний товар із кошика.
 57
 58 3.4 Інтерфейс користувача
 59 Інтерфейс користувача складається з шапки та підвалу сайту, що зберігається на всіх стоірнках та містять посилання на інші сторінки.
 60
 61 3.4.1 Головна сторінка index.php
 62 Головна сторінка index.php є точкою входу на вебсайт. Вона містить таблицю зі списком товарів, де для кожного товару виводиться назва, ціна, а також поле для вибору кількості. Користувач може обрати кількість і додати товар до кошика за допомогою відповідної кнопки. У разі, якщо товар уже знаходиться в кошику, його кількість оновлюється — до поточної кількості додається нова. При цьому реалізовано базову перевірку введених значень: не можна додати від’ємну кількість товару або нуль, що запобігає помилкам та некоректному відображенню у кошику.
 63
 64 3.4.2 Сторінка кошику cart.ph
 65 Сторінка cart.php відповідає за відображення вмісту кошика. Усі додані товари виводяться у форматі таблиці, де для кожного товару зазначено його назву, ціну за одиницю, кількість та загальну вартість (ціна × кількість). Користувач має можливість видалити окремий товар із кошика за допомогою кнопки "Видалити", яка розміщена біля кожної позиції. При цьому сторінка автоматично оновлюється, і вміст кошика змінюється відповідно. У нижній частині таблиці виводиться загальна сума всіх товарів у кошику. Також присутні дві кнопки: "Скасувати", яка веде назад на головну сторінку (index.php), та "Оплатити" (поки що без реалізованої функціональності).
 66
 67 3.4.3 Сторінка home.php
 68 Сторінка home.php містить текст вітання користувачів, загальну інформацію та кнопку "Почати", що перенаправляє користувача на сторінку вибору продукту.
 69
 70
 71 4 ВИСНОВКИ
 72
 73 У ході виконання даної лабораторної роботи було розроблено простий веб-застосунок інтернет-магазину "Весна". Для реалізації було використано мову програмування PHP, HTML, CSS, а також базу даних SQLite. У рамках роботи вдалося закріпити навички створення багатосторінкових веб-застосунків та реалізації взаємодії з базою даних через PDO. Реалізовано збереження даних про вибрані товари у сесії, обробку форм методом POST, а також базову валідацію введених користувачем значень.
 74
 75
 76 ДОДАТОК А
 77 Відеозапис
 78
 79 Відеозапис презентації результатів лабораторної роботи: https://youtu.be/IYbMrIz5dZc?si=9xBx2ysE7Zt-K3rr
 80
 81 Хронологічний опис відеозапису:
 82 00:00 Вступ
 83 Представлення студента та роботи
 84
 85 00:15 Ініціалізація бази даних
 86 Створення та заповнення бази даних
 87
 88 01:30 Компоненти (шапка, підвал)
 89 Компоненти програми та стилі
 90
 91 02:00 Сторінки та логіка
 92 Головні сторінки програми та логіка додавання та видалення з кошику
 93
 94 05:45 Демонстрація роботи програми
 95 Демонстрація веб-застосунку та його роботи
 96
 97
 98 ДОДАТОК Б
 99 Програмний код
100
101 includes/header.php
102   1 <!DOCTYPE html>
103   2 <html lang="en">
104   3 <head>
105   4     <meta charset="UTF-8">
106   5     <meta name="viewport" content="width=device-width, initial-scale=1.0">
107   6     <title>Document</title>
108   7     <link rel="stylesheet" href="./styles/index.css">
109   8 </head>
110   9 <body>
111  10     <header>
112  11         <div>
113  12             <a href="home.php">
114  13                 <h1>ВЕСНА</h1>
115  14             </a>
116  15         </div>
117  16         <nav>
118  17             <a href="home.php">Home</a>
119  18             <a href="index.php">Products</a>
120  19             <a href="cart.php">Cart</a>
121  20         </nav>
122  21     </header>
123  22     <main class="p-6 flex-grow">
124  23
125
126 includes/footer.php
127   1 </main>
128   2 <footer>
129   3     <nav class="nav-links">
130   4         <a href="home.php" class="nav-item">Home</a>
131   5         <a href="index.php" class="nav-item">Products</a>
132   6         <a href="cart.php" class="nav-item">Cart</a>
133   7         <a href="home.php" class="nav-item">About Us</a>
134   8     </nav>
135   9 </footer>
136  10 </body>
137  11
138  12 </html>
139
140 index.php
141   1 <?php
142   2 session_start();
143   3 require 'includes/header.php';
144   4 require 'db/init_db.php';
145   5
146   6 $stmt = $pdo->query("SELECT * FROM products");
147   7 $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
148   8
149   9 if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['product_id'], $_POST['quantity'])) {
150  10     $product_id = (int)$_POST['product_id'];
151  11     $quantity = max(1, (int)$_POST['quantity']);
152  12
153  13     $stmt = $pdo->prepare('SELECT * FROM products WHERE id = ?');
154  14     $stmt->execute([$product_id]);
155  15     $product = $stmt->fetch(PDO::FETCH_ASSOC);
156  16
157  17     if ($product) {
158  18         if (!isset($_SESSION['cart'])) {
159  19             $_SESSION['cart'] = [];
160  20         }
161  21
162  22         if (isset($_SESSION['cart'][$product_id])) {
163  23             $_SESSION['cart'][$product_id]['quantity'] += $quantity;
164  24         } else {
165  25             $_SESSION['cart'][$product_id] = [
166  26                 'id' => $product['id'],
167  27                 'name' => $product['name'],
168  28                 'price' => $product['price'],
169  29                 'quantity' => $quantity
170  30             ];
171  31         }
172  32     }
173  33 }
174  34 ?>
175  35     <h1>Список товарів</h1>
176  36     <table>
177  37         <thead>
178  38             <tr>
179  39                 <th>Назва</th>
180  40                 <th>Ціна ($)</th>
181  41                 <th class="">Кількість</th>
182  42             </tr>
183  43         </thead>
184  44         <tbody>
185  45             <?php foreach ($products as $product): ?>
186  46             <tr>
187  47                 <form method="POST">
188  48                     <td><?= htmlspecialchars($product['name']) ?></td>
189  49                     <td><?= number_format($product['price'], 2) ?></td>
190  50                     <td class="quant">
191  51                         <input class="quant" type="number" name="quantity" min="1" value="1" required>
192  52                         <input type="hidden" name="product_id" value="<?= $product['id'] ?>">
193  53                     </td>
194  54                     <td>
195  55                         <button type="submit">Додати до кошика</button>
196  56                     </td>
197  57                 </form>
198  58             </tr>
199  59             <?php endforeach; ?>
200  60         </tbody>
201  61     </table>
202  62 <?php require 'includes/footer.php' ?>
203
204 cart.php
205   1 <?php
206   2 session_start();
207   3 require 'includes/header.php';
208   4
209   5 $cart = $_SESSION['cart'] ?? [];
210   6
211   7 if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['remove'])) {
212   8     $product_id = (int)$_POST['remove'];
213   9     if (isset($cart[$product_id])) {
214  10         unset($cart[$product_id]);
215  11         $_SESSION['cart'] = $cart;
216  12     }
217  13 }
218  14 ?>
219  15
220  16 <h1>Ваш кошик</h1>
221  17
222  18 <?php if (empty($cart)): ?>
223  19     <p class="empty">Кошик порожній.</p>
224  20 <?php else: ?>
225  21     <table class="cart">
226  22         <tr>
227  23             <th>Назва</th>
228  24             <th>Ціна</th>
229  25             <th>Кількість</th>
230  26             <th>Сума</th>
231  27         </tr>
232  28         <?php $total = 0; ?>
233  29         <?php foreach ($cart as $item): ?>
234  30             <?php $sum = $item['price'] * $item['quantity']; ?>
235  31             <tr>
236  32                 <td><?= htmlspecialchars($item['name']) ?></td>
237  33                 <td><?= number_format($item['price'], 2) ?></td>
238  34                 <td class="quantity"><?= $item['quantity'] ?></td>
239  35                 <td><?= number_format($sum, 2) ?></td>
240  36                 <td class="remove-cell">
241  37                     <form method="POST">
242  38                         <input type="hidden" name="remove" value="<?= $item['id'] ?>">
243  39                         <button type="submit" class="remove">Remove</button>
244  40                     </form>
245  41                 </td>
246  42             </tr>
247  43             <?php $total += $sum; ?>
248  44         <?php endforeach; ?>
249  45         <tr class="total">
250  46             <td colspan="4"><strong>Разом:</strong></td>
251  47             <td><strong><?= number_format($total, 2) ?> $</strong></td>
252  48         </tr>
253  49     </table>
254  50     <div class="buttons-container">
255  51         <a href="index.php">Скасувати</a>
256  52         <a href="">Оплатити</a>
257  53     </div>
258  54 <?php endif;
259  55 require 'includes/footer.php' ?>
260
261 home.php
262   1 <?php require 'includes/header.php' ?>
263   2 <div class="home">
264   3     <h1>Ласкаво просимо до магазину "Весна"!</h1>
265   4     <p>У нас ви завжди знайдете свіжі продукти за доступними цінами.
266   5         Ми дбаємо про якість і здоров’я вашої родини — щодня доставляємо найкращі овочі,
267   6         фрукти, молочні та м’ясні вироби від перевірених постачальників.</p>
268   7     <a href="index.php">
269   8         <button>Почати</button>
270   9     </a>
271  10 </div>
272  11
273  12 <?php require 'includes/footer.php' ?>
274
275 db/init_db.php
276   1 <?php
277   2 $dbFile = 'products_shop.sqlite';
278   3
279   4 try {
280   5     $pdo = new PDO("sqlite:$dbFile");
281   6     $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
282   7
283   8     $pdo->exec("CREATE TABLE IF NOT EXISTS products (
284   9         id INTEGER PRIMARY KEY AUTOINCREMENT,
285  10         name TEXT NOT NULL,
286  11         price REAL NOT NULL
287  12     );");
288  13
289  14     $count = $pdo->query("SELECT COUNT(*) FROM products")->fetchColumn();
290  15     if ($count == 0) {
291  16         $stmt = $pdo->prepare("INSERT INTO products (name, price) VALUES (?, ?)");
292  17         $products = [
293  18             ['Батон "Нарізний"', 22.50],
294  19             ['Молоко 2.5% 1л', 34.90],
295  20             ['Яйця курячі 10шт', 49.00],
296  21             ['Сир твердий 200г', 85.75],
297  22             ['Ковбаса "Лікарська" 500г', 119.90],
298  23             ['Гречка 1кг', 43.20],
299  24             ['Олія соняшникова 1л', 56.00],
300  25             ['Цукор 1кг', 39.50],
301  26             ['Картопля молода 1кг', 27.80],
302  27             ['Яблука червоні 1кг', 31.40],
303  28         ];
304  29         foreach ($products as $product) {
305  30             $stmt->execute($product);
306  31         }
307  32     }
308  33 } catch (PDOException $e) {
309  34     die("Error: " . $e->getMessage());
310  35 }
311  36 ?>
312
